/**
 * Minified by jsDelivr using Terser v5.17.1.
 * Original file: /npm/giphy-api@2.0.2/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var queryStringify=require("./util/queryStringify"),httpService=require("./util/http"),API_HOSTNAME="api.giphy.com",API_BASE_PATH="/v1/",PUBLIC_BETA_API_KEY="dc6zaTOxFJmzC",promisesExist="undefined"!=typeof Promise;function _handleErr(e,t){if(t)return t(e);if(promisesExist)return Promise.reject(e);throw new Error(e)}var GiphyAPI=function(e){if("string"==typeof e||null==e)this.apiKey=e||PUBLIC_BETA_API_KEY,e={};else{if("object"!=typeof e)throw new Error("Invalid options passed to giphy-api");this.apiKey=e.apiKey||PUBLIC_BETA_API_KEY}this.https=e.https,this.timeout=e.timeout||3e4,this.httpService=httpService.create(this.https)};GiphyAPI.prototype={search:function(e,t){return e?this._request({api:e.api||"gifs",endpoint:"search",query:"string"==typeof e?{q:e}:e},t):_handleErr("Search phrase cannot be empty.",t)},id:function(e,t){var r=Array.isArray(e);return!e||r&&0===e.length?_handleErr("Id required for id API call",t):(r&&(e=e.join()),this._request({api:"gifs",query:{ids:e}},t))},translate:function(e,t){return e?this._request({api:e.api||"gifs",endpoint:"translate",query:"string"==typeof e?{s:e}:e},t):_handleErr("Translate phrase cannot be empty.",t)},random:function(e,t){var r={api:(e?e.api:null)||"gifs",endpoint:"random"};return"string"==typeof e?r.query={tag:e}:"object"==typeof e?r.query=e:"function"==typeof e&&(t=e),this._request(r,t)},trending:function(e,t){var r={endpoint:"trending"};return r.api=(e?e.api:null)||"gifs",e&&delete e.api,"object"==typeof e&&0!==Object.keys(e).length?r.query=e:"function"==typeof e&&(t=e),this._request(r,t)},_request:function(e,t){if(!t&&!promisesExist)throw new Error("Callback must be provided if promises are unavailable");var r,i="";e.endpoint&&(i="/"+e.endpoint);if(void 0!==e.query&&"object"==typeof e.query){if(0===Object.keys(e.query).length)return t?t(new Error("Options object should not be empty")):Promise.reject(new Error("Options object should not be empty"));e.query.api_key=this.apiKey,r=queryStringify(e.query)}else r=queryStringify({api_key:this.apiKey});var n={httpService:this.httpService,request:{host:API_HOSTNAME,path:API_BASE_PATH+e.api+i+r},timeout:this.timeout,fmt:e.query&&e.query.fmt,https:this.https},o=function(e,t){httpService.get(n,e,t)};if(!t){if(!promisesExist)throw new Error("Callback must be provided unless Promises are available");return new Promise((function(e,t){o(e,t)}))}o((function(e){t(null,e)}),(function(e){t(e)}))}},module.exports=function(e,t){return new GiphyAPI(e,t)};
//# sourceMappingURL=/sm/b390c8869da828f31280c16b7bc61e1301ad038a95466251bd0db67ac67fdfaa.map